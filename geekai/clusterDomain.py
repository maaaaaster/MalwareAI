import pandas as pd
from leven import levenshtein
import numpy as np
from sklearn.cluster import DBSCAN


def lev_metric(x, y):
    i, j = int(x[0]), int(y[0])
    return levenshtein(data[i], data[j])

df = pd.read_csv('first_url.csv')

outf = open('levenshtein_first.txt','w+',encoding='utf-8')

for x in df.groupby('top'):
    data = list(x[1].clean_url)
    host = list(x[1].host)
    X = np.arange(len(data)).reshape(-1, 1)
    cluster = DBSCAN( metric=lev_metric, eps=7, min_samples=2)
    Y = cluster.fit_predict(X)
    group2data = {}

    for index in range(len(X)):
        y = Y[index]
        if y not in group2data:
            group2data[y] = []
        group2data[y].append(data[index])

    for key in group2data:
        if key>0:
            outf.write(' '.join(group2data[key])+'\n')

    print('%s clustered %d domains '%(x[0],len(X)))
    if -1 in group2data:
        print('left : %d'%len(group2data[-1]))
    else:
        print('no left')



