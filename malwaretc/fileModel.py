from config import *
import os
import pandas as pd
from sklearn.model_selection import train_test_split 
from sklearn.metrics import roc_auc_score
from sklearn.metrics import accuracy_score 
import lightgbm as lgb 
from tfidfModel import loadTFFeatures

def fileFeatures():
    fileList = []
    df = pd.read_csv(outseqFile)
    for x in df.groupby('file_id'):
        fileid = x[0]
        data = x[1]
        seqLen = data['seq'].map(apiLen)
        fileList.append( {
            'file_id':fileid,
            'ThreadNum':seqLen.count(),
            'MaxThreadLen':seqLen.max(),
            'MinThreadLen':seqLen.min(),
            'MeanThreadLen':seqLen.mean(),
        })
    return fileList

def fileLabels():
    df = pd.read_csv(outseqFile)
    result = df[['file_id','label']].drop_duplicates()
    return result

def loadFeatures():
    if os.path.exists(fileFeatureName):
        df = pd.read_csv(fileFeatureName)
    else:
        df = pd.DataFrame(fileFeatures())
        df.to_csv(fileFeatureName,index=0)
    del df['file_id']
    return df

def loadLabels():
    if os.path.exists(trainLabelFile):
        df = pd.read_csv(trainLabelFile)
    else:
        df = fileLabels()
        df.to_csv(trainLabelFile,index=0)
    return df
    
def checkFileFeatures():  
    tfFeatures = loadTFFeatures()  
    x = loadFeatures()    
    x= pd.concat([x,tfFeatures],axis=1)
    labels = loadLabels()
    fileIds = labels['file_id']
    y = labels['label']
    x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=.1)
    train_data=lgb.Dataset(x_train,label=y_train)

    param = {'num_leaves':150, 'objective':'multiclass','max_depth':7,'learning_rate':.05,'max_bin':200,'num_class':6}
    param['metric'] = ['auc']
    train_data=lgb.Dataset(x_train,label=y_train)

    param = {'num_leaves':150, 'objective':'multiclass','max_depth':7,'learning_rate':.05,'max_bin':200,'num_class':6}
    param['metric'] = ['auc']

    num_round=20

    lgbm=lgb.train(param,train_data,num_round)
    checkModel(y_test,lgbm.predict(x_test))


if __name__ =='__main__':
    checkFileFeatures()
